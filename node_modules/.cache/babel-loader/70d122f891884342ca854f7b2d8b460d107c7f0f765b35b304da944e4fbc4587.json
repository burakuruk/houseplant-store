{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: [],\n  totalQuantity: 0,\n  totalPrice: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (!existingItem) {\n        state.items.push({\n          ...newItem,\n          quantity: 1\n        });\n      } else {\n        existingItem.quantity++;\n      }\n      state.totalQuantity++;\n      state.totalPrice += newItem.price;\n    },\n    removeFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem) {\n        state.totalQuantity -= existingItem.quantity;\n        state.totalPrice -= existingItem.price * existingItem.quantity;\n        state.items = state.items.filter(item => item.id !== id);\n      }\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","items","totalQuantity","totalPrice","cartSlice","name","reducers","addToCart","state","action","newItem","payload","existingItem","find","item","id","push","quantity","price","removeFromCart","filter","actions","reducer"],"sources":["C:/Users/burak/OneDrive/Masaüstü/houseplant-store/src/redux/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  totalQuantity: 0,\r\n  totalPrice: 0,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      if (!existingItem) {\r\n        state.items.push({ ...newItem, quantity: 1 });\r\n      } else {\r\n        existingItem.quantity++;\r\n      }\r\n      state.totalQuantity++;\r\n      state.totalPrice += newItem.price;\r\n    },\r\n    removeFromCart(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      if (existingItem) {\r\n        state.totalQuantity -= existingItem.quantity;\r\n        state.totalPrice -= existingItem.price * existingItem.quantity;\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addToCart, removeFromCart } = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE,CAAC;EAChBC,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACP,KAAK,CAACY,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACvE,IAAI,CAACH,YAAY,EAAE;QACjBJ,KAAK,CAACP,KAAK,CAACe,IAAI,CAAC;UAAE,GAAGN,OAAO;UAAEO,QAAQ,EAAE;QAAE,CAAC,CAAC;MAC/C,CAAC,MAAM;QACLL,YAAY,CAACK,QAAQ,EAAE;MACzB;MACAT,KAAK,CAACN,aAAa,EAAE;MACrBM,KAAK,CAACL,UAAU,IAAIO,OAAO,CAACQ,KAAK;IACnC,CAAC;IACDC,cAAcA,CAACX,KAAK,EAAEC,MAAM,EAAE;MAC5B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACP,KAAK,CAACY,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC/D,IAAIH,YAAY,EAAE;QAChBJ,KAAK,CAACN,aAAa,IAAIU,YAAY,CAACK,QAAQ;QAC5CT,KAAK,CAACL,UAAU,IAAIS,YAAY,CAACM,KAAK,GAAGN,YAAY,CAACK,QAAQ;QAC9DT,KAAK,CAACP,KAAK,GAAGO,KAAK,CAACP,KAAK,CAACmB,MAAM,CAAEN,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER,SAAS;EAAEY;AAAe,CAAC,GAAGf,SAAS,CAACiB,OAAO;AAC9D,eAAejB,SAAS,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}